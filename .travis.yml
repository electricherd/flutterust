# focal
language: android
#services: docker
dist: bionic

env:
  global:
    - CRATE_NAME=audiofinder
    - UBUNTU_VER=LTS_20.04

# flutterust only on nightly
# rust: nightly

addons:
  apt:
    packages:
      - lib32stdc++6
      - lib32gcc1
      - lib32gcc-s1
      - libc6-i386
      - p7zip-full


android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-26.0.2

    # The SDK version used to compile your project
    - android-26

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
#    - sys-img-x86-android-26
#    - sys-img-armeabi-v7a-android-17

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  cargo: true
  directories:
    - "$HOME/.gradle/caches/"
    - "$HOME/.gradle/wrapper/"
    - "$HOME/.pub-cache"       # flutter

before_install:
  - echo y | sdkmanager "ndk-bundle"

before_script:
  - env

install:
  - echo $CRATE_NAME-$target-$TRAVIS_TAG
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > ./rustup.sh
  - sh ./rustup.sh -y
  - git clone https://github.com/flutter/flutter.git -b stable
  - ./flutter/bin/flutter doctor
  # rustup
  - rustup default nightly
  - rustup add aarch64-linux-android wasm32-unknown-unknown armv7-linux-androideabi i686-linux-android x86_64-linux-android
  - cargo install --force cargo-lipo
  - cargo install --force cargo-make
  - cargo install --force cargo-ndk
  - cargo install --force cargo-flutter
  - cargo install --force wasm-bindgen-cli
  - cargo install --force cbindgen
  - cargo install --force dart-bindgen --features cli

script:
  - cargo make